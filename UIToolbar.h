//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <UIKit/UIView.h>

#import "UIBarPositioning.h"
#import "_UIBackdropViewGraphicsQualityChangeDelegate.h"
#import "_UIBarPositioningInternal.h"
#import "_UIShadowedView.h"

@class NSArray, NSString, UIColor, UIImageView, _UIBackdropView;

@interface UIToolbar : UIView <_UIShadowedView, _UIBackdropViewGraphicsQualityChangeDelegate, _UIBarPositioningInternal, UIBarPositioning>
{
    id _delegate;
    NSArray *_items;
    UIColor *_barTintColor;
    struct {
        unsigned int barStyle:3;
        unsigned int mode:2;
        unsigned int wasEnabled:1;
        unsigned int downButtonSentAction:1;
        unsigned int barTranslucence:3;
        unsigned int isLocked:1;
        unsigned int backgroundLayoutNeedsUpdate:1;
        unsigned int hasCustomBackgroundView:1;
    } _toolbarFlags;
    struct __CFDictionary *_groups;
    NSArray *_buttonItems;
    long long _currentButtonGroup;
    long long _pressedTag;
    double _extraEdgeInsets;
    id _appearanceStorage;
    _UIBackdropView *_adaptiveBackdrop;
    UIImageView *_backgroundView;
    UIView *_shadowView;
    _Bool _isAdaptiveToolbarDisabled;
    _Bool _wantsLetterpressContent;
    _Bool _centerTextButtons;
    _Bool _collapsed;
    long long _barPosition;
    NSString *_backdropViewLayerGroupName;
}

+ (double)defaultHeightForBarSize:(int)arg1;
+ (double)defaultSelectionModeHeight;
+ (double)defaultHeight;
+ (id)defaultButtonFont;
+ (Class)defaultTextButtonClass;
+ (Class)defaultButtonClass;
+ (float)_buttonGap;
@property(nonatomic, getter=isCollapsed) _Bool collapsed; // @synthesize collapsed=_collapsed;
@property(retain, nonatomic, getter=_backdropViewLayerGroupName, setter=_setBackdropViewLayerGroupName:) NSString *backdropViewLayerGroupName; // @synthesize backdropViewLayerGroupName=_backdropViewLayerGroupName;
@property(nonatomic) _Bool centerTextButtons; // @synthesize centerTextButtons=_centerTextButtons;
@property(readonly, nonatomic) long long barPosition; // @synthesize barPosition=_barPosition;
@property(nonatomic, setter=_setWantsLetterpressContent:) _Bool _wantsLetterpressContent; // @synthesize _wantsLetterpressContent;
@property(nonatomic, getter=_isAdaptiveToolbarDisabled, setter=_setAdaptiveToolbarDisabled:) _Bool _adaptiveToolbarDisabled; // @synthesize _adaptiveToolbarDisabled=_isAdaptiveToolbarDisabled;
@property(retain, nonatomic, setter=_setShadowView:) UIView *_shadowView; // @synthesize _shadowView;
@property(retain, nonatomic) UIColor *barTintColor; // @synthesize barTintColor=_barTintColor;
- (void)_setHidesShadow:(_Bool)arg1;
- (_Bool)_hidesShadow;
- (id)shadowImageForToolbarPosition:(long long)arg1;
- (void)setShadowImage:(id)arg1 forToolbarPosition:(long long)arg2;
- (id)backgroundImageForToolbarPosition:(long long)arg1 barMetrics:(long long)arg2;
- (void)setBackgroundImage:(id)arg1 forToolbarPosition:(long long)arg2 barMetrics:(long long)arg3;
- (void)_customViewChangedForButtonItem:(id)arg1;
- (unsigned long long)_subviewIndexAboveBackgroundView;
- (void)animateToolbarItemIndex:(unsigned long long)arg1 duration:(double)arg2 target:(id)arg3 didFinishSelector:(SEL)arg4;
- (void)layoutSubviews;
- (void)_didMoveFromWindow:(id)arg1 toWindow:(id)arg2;
- (_Bool)isMinibar;
- (struct CGSize)sizeThatFits:(struct CGSize)arg1;
- (void)invalidateIntrinsicContentSize;
- (struct CGSize)intrinsicContentSize;
- (_Bool)_contentHuggingDefault_isUsuallyFixedHeight;
- (void)removeConstraint:(id)arg1;
- (void)addConstraint:(id)arg1;
- (void)setTranslatesAutoresizingMaskIntoConstraints:(_Bool)arg1;
- (struct CGSize)defaultSizeForOrientation:(long long)arg1;
- (void)setItems:(id)arg1 animated:(_Bool)arg2;
- (void)_sendAction:(id)arg1 withEvent:(id)arg2;
- (void)backdropView:(id)arg1 didChangeToGraphicsQuality:(long long)arg2;
- (id)backdropView:(id)arg1 willChangeToGraphicsQuality:(long long)arg2;
@property(nonatomic, getter=isTranslucent) _Bool translucent;
- (void)_effectiveBarTintColorDidChangeWithPreviousColor:(id)arg1;
@property(retain, nonatomic) UIColor *tintColor; // @dynamic tintColor;
- (void)_setBarTintColor:(id)arg1 force:(_Bool)arg2;
- (id)_effectiveBarTintColor;
- (void)_updateBackgroundColor;
@property(copy, nonatomic) NSArray *items;
@property(nonatomic) id <UIToolbarDelegate> delegate;
- (int)mode;
- (void)setMode:(int)arg1;
@property(nonatomic) long long barStyle;
- (void)setBarStyle:(long long)arg1 force:(_Bool)arg2;
- (void)_updateOpacity;
- (double)extraEdgeInsets;
- (void)setExtraEdgeInsets:(double)arg1;
- (void)dealloc;
- (void)encodeWithCoder:(id)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (_Bool)_isTopBar_legacy;
- (long long)_barPosition;
- (void)_setBarPosition:(long long)arg1;
- (void)_setButtonBackgroundImage:(id)arg1 mini:(id)arg2 forStates:(unsigned long long)arg3;
- (void)_setBackgroundImage:(id)arg1 mini:(id)arg2;
- (struct CGRect)_frameOfBarButtonItem:(id)arg1;
- (void)_setForceTopBarAppearance:(_Bool)arg1;
- (void)setButtonItems:(id)arg1;
- (id)buttonItems;
- (void)drawRect:(struct CGRect)arg1;
- (void)setCenter:(struct CGPoint)arg1;
- (void)setFrame:(struct CGRect)arg1;
- (void)setBounds:(struct CGRect)arg1;
- (void)_frameOrCenterChanged;
- (void)_frameOrBoundsChangedWithVisibleSizeChange:(_Bool)arg1 wasMinibar:(_Bool)arg2;
- (void)setAutoresizingMask:(unsigned long long)arg1;
- (void)animateWithDuration:(float)arg1 forButton:(int)arg2;
- (void)setOnStateForButton:(_Bool)arg1 forButton:(int)arg2;
- (_Bool)onStateForButton:(int)arg1;
- (void)setBadgeAnimated:(_Bool)arg1 forButton:(int)arg2;
- (void)setBadgeGlyph:(id)arg1 forButton:(int)arg2;
- (void)setBadgeValue:(id)arg1 forButton:(int)arg2;
- (void)setButtonBarTrackingMode:(int)arg1;
- (void)getVisibleButtonTags:(int *)arg1 count:(unsigned int *)arg2 maxItems:(unsigned int)arg3;
- (int)currentButtonGroup;
- (void)showButtonGroup:(int)arg1 withDuration:(double)arg2;
- (void)registerButtonGroup:(int)arg1 withButtons:(int *)arg2 withCount:(int)arg3;
- (void)showButtons:(int *)arg1 withCount:(int)arg2 withDuration:(double)arg3;
- (void)_buttonBarFinishedAnimating;
- (void)positionButtons:(id)arg1 tags:(int *)arg2 count:(int)arg3 group:(int)arg4;
- (id)createButtonWithDescription:(id)arg1;
- (id)initInView:(id)arg1 withItemList:(id)arg2;
- (id)initInView:(id)arg1 withFrame:(struct CGRect)arg2 withItemList:(id)arg3;
- (id)initWithFrame:(struct CGRect)arg1;
- (_Bool)_subclassImplementsDrawRect;
- (_Bool)_isInNavigationBar;
- (id)_customToolbarAppearance;
- (void)_positionToolbarButtons:(id)arg1 ignoringItem:(id)arg2 resetFontScaleAdjustment:(_Bool)arg3;
- (id)_positionToolbarButtons:(id)arg1 ignoringItem:(id)arg2 resetFontScaleAdjustment:(_Bool)arg3 actuallyRepositionButtons:(_Bool)arg4;
- (id)_repositionedItemsFromItems:(id)arg1 withBarButtonFrames:(id *)arg2 withHitRects:(id *)arg3 buttonIndexes:(id *)arg4 textButtonIndexes:(id *)arg5;
- (void)_updateBackgroundImage;
- (void)_layoutBackgroundViewConsideringStatusBar;
- (void)_setVisualAltitudeBias:(struct CGSize)arg1;
- (void)_setVisualAltitude:(double)arg1;
- (void)_cleanupAdaptiveBackdrop;
- (id)_currentCustomBackground;
- (id)_currentCustomBackgroundRespectOversize_legacy:(_Bool *)arg1;
@property(nonatomic, getter=_isLocked, setter=_setLocked:) _Bool _locked;
- (_Bool)_supportsAdaptiveBackground;
- (void)_setBackgroundView:(id)arg1;
- (id)_backgroundView;
- (id)_adaptiveBackdrop;
- (double)_edgeMarginForBorderedItem:(_Bool)arg1 isText:(_Bool)arg2;
- (void)_updateItemsForNewFrame:(id)arg1;
- (void)_finishButtonAnimation:(int)arg1 forButton:(int)arg2;
- (id)_currentButtons;
- (void)_showButtons:(int *)arg1 withCount:(int)arg2 group:(int)arg3 withDuration:(double)arg4 adjustPositions:(_Bool)arg5 skipTag:(int)arg6;
- (id)_buttonWithDescription:(id)arg1;
- (void)_adjustButtonPressed:(id)arg1;
- (void)_buttonCancel:(id)arg1;
- (void)_buttonUp:(id)arg1;
- (void)_buttonDownDelayed:(id)arg1;
- (void)_buttonDown:(id)arg1;
- (id)_descriptionForTag:(int)arg1;
- (id)scriptingInfoWithChildren;
- (void)_updateScriptingInfo:(id)arg1 view:(id)arg2;
- (id)_buttonName:(id)arg1 withType:(int)arg2;
- (_Bool)isElementAccessibilityExposedToInterfaceBuilder;
- (double)_autolayoutSpacingAtEdge:(int)arg1 nextToNeighbor:(id)arg2;
- (double)_autolayoutSpacingAtEdge:(int)arg1 inContainer:(id)arg2;
- (_Bool)_hasCustomAutolayoutNeighborSpacing;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

